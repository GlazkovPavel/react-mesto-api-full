{"ast":null,"code":"var _jsxFileName = \"/Users/pavelglazkov/Desktop/dev/react-mesto-api-full/frontend/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport Header from \"./Header\";\nimport Main from \"./Main\";\nimport Footer from \"./Footer\";\nimport AddPlacePopup from \"./AddPlacePopup\";\nimport EditAvatarPopup from \"./EditAvatarPopup\";\nimport EditProfilePopup from \"./EditProfilePopup\";\nimport api from \"../utils/api\";\nimport ImagePopup from \"./ImagePopup\";\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\nimport { Route, Switch, useHistory } from 'react-router-dom';\nimport { Login } from \"./Login\";\nimport { Register } from \"./Register\";\nimport { ProtectedRoute } from \"./ProtectedRoute\";\nimport { InfoTooltip } from \"./InfoTooltip\";\nimport * as apiAuth from \"../utils/apiAuth\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [isEditAvatarPopupOpen, setEditAvatarPopupOpen] = React.useState(false);\n  const [isEditProfilePopupOpen, setEditProfilePopupOpen] = React.useState(false);\n  const [isAddPlacePopupOpen, setAddPlacePopupOpen] = React.useState(false);\n  const [cards, setCards] = React.useState([]);\n  const [selectedCard, setSelectedCard] = React.useState({});\n  const [isImagePopupOpen, setImagePopupOpen] = React.useState(false);\n  const [currentUser, setCurrentUser] = React.useState({});\n  const [isLoading, setIsLoading] = React.useState(false);\n  const [isLoggedIn, setIsLoggedIn] = React.useState(false);\n  const [email, setEmail] = React.useState('');\n  const [isInfoTooltipOpen, setInfoTooltipOpen] = React.useState(false);\n  const [tooltipStatus, setToolTipStatus] = React.useState(false);\n  const history = useHistory();\n  React.useEffect(() => {\n    const jwt = localStorage.getItem('jwt');\n\n    if (jwt) {\n      apiAuth.getContent(jwt).then(res => {\n        setIsLoggedIn(true);\n        history.push('/users/me');\n      }).catch(err => console.error(err));\n    }\n  }, [history, '']);\n  React.useEffect(() => {\n    api.getUserInfo().then(res => {\n      setEmail(res.email);\n      setCurrentUser(res);\n    }).catch(err => {\n      console.error(err);\n    });\n  }, []);\n  React.useEffect(() => {\n    api.getInitialCards().then(res => {\n      setCards(res.data);\n    }).catch(err => {\n      console.error(err);\n    });\n  }, []);\n\n  function register(email, password) {\n    apiAuth.register(email, password).then(res => {\n      if (res.data) {\n        setToolTipStatus(false);\n        setInfoTooltipOpen(true);\n        history.push('/signin');\n      }\n    }).catch(err => {\n      setToolTipStatus(true);\n      setInfoTooltipOpen(true);\n      console.log(`Упс, произошла ошибка: ${err}`);\n    });\n  }\n\n  function enter(email, password) {\n    apiAuth.enter(email, password).then(data => {\n      if (data.token) {\n        setToolTipStatus(false);\n        setInfoTooltipOpen(false);\n        localStorage.setItem('jwt', data.token);\n        setIsLoggedIn(true);\n        history.push('/users/me');\n        setEmail(email);\n      } else {\n        setToolTipStatus(true);\n        setInfoTooltipOpen(true);\n      }\n    }).catch(err => {\n      setToolTipStatus(true);\n      setInfoTooltipOpen(true);\n      console.log(`Упс, произошла ошибка: ${err}`);\n    });\n  }\n\n  function signOut() {\n    localStorage.removeItem('jwt');\n    setIsLoggedIn(false);\n    history.push('/signin');\n  }\n\n  const changeLoading = () => {\n    setIsLoading(true);\n  };\n\n  const handleCardClick = data => {\n    setImagePopupOpen(true);\n    setSelectedCard(data);\n  };\n\n  const closeAllPopups = () => {\n    setEditAvatarPopupOpen(false);\n    setEditProfilePopupOpen(false);\n    setAddPlacePopupOpen(false);\n    setImagePopupOpen(false);\n    setInfoTooltipOpen(false);\n  };\n\n  const handleEditProfileClick = () => {\n    setEditProfilePopupOpen(true);\n  };\n\n  const handleAddPlaceClick = () => {\n    setAddPlacePopupOpen(true);\n  };\n\n  function handleEditAvatarClick() {\n    setEditAvatarPopupOpen(true);\n  } //Меняет информацию о пользователе\n\n\n  const handleUpdateUser = data => {\n    api.setUserInfo(data).then(res => {\n      setCurrentUser(res.data);\n      closeAllPopups();\n    }).catch(err => {\n      console.error(err);\n    }).finally(() => {\n      setIsLoading(false);\n    });\n  }; //Меняет аватар\n\n\n  const handleUpdateAvatar = data => {\n    api.changeAvatar(data).then(res => {\n      setCurrentUser(res.data);\n      closeAllPopups();\n    }).catch(err => {\n      console.error(err);\n    }).finally(() => {\n      setIsLoading(false);\n    });\n  }; //Добавление новой карточки\n\n\n  const handleAddPlaceSubmit = newCard => {\n    api.setCardServer(newCard).then(res => {\n      setCards([res.data, ...cards]);\n      closeAllPopups();\n    }).catch(err => {\n      console.error(err);\n    }).finally(() => {\n      setIsLoading(false);\n    });\n  };\n\n  function handleCardLike(card) {\n    // Снова проверяем, есть ли уже лайк на этой карточке\n    const isLiked = card.likes.some(i => i === currentUser._id); // Отправляем запрос в API и получаем обновлённые данные карточки\n\n    api.changeLikeCardStatus(card._id, !isLiked).then(newCard => {\n      const newCards = cards.map(c => c._id === card._id ? newCard.data : c); // Формируем новый массив на основе имеющегося, подставляя в него новую карточку\n      //проверяет если id предыдущей карточки равен id полученной при PUT-запросе, то создавай новую карточку из запроса иначе оставляй старую\n\n      setCards(newCards);\n    }) // .then((newCard) => {\n    //   setCards((state) => state.map((c) => c._id === card._id ? newCard : c));\n    // })\n    .catch(err => {\n      console.error(err);\n    });\n  }\n\n  function handleCardDelete(card) {\n    api.deleteCard(card._id).then(() => {\n      setCards(cards.filter(c => c._id !== card._id));\n    }).catch(err => {\n      console.error(err);\n    });\n  }\n\n  React.useEffect(() => {\n    window.addEventListener('keydown', e => {\n      if (e.key === 'Escape') {\n        closeAllPopups();\n      }\n    });\n  }, []);\n\n  function overlayClick(e) {\n    if (e.classList.contains('popup')) {\n      closeAllPopups();\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(CurrentUserContext.Provider, {\n    value: currentUser,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        signOut: signOut,\n        email: email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(ProtectedRoute, {\n          exact: true,\n          path: \"/users/me\",\n          component: Main,\n          onEditAvatar: handleEditAvatarClick,\n          onEditProfile: handleEditProfileClick,\n          onAddPlace: handleAddPlaceClick,\n          onCardClick: handleCardClick,\n          onCardLike: handleCardLike,\n          onCardDelete: handleCardDelete,\n          cards: cards,\n          setCards: setCards,\n          isLoggedIn: isLoggedIn\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/signup\",\n          children: /*#__PURE__*/_jsxDEV(Register, {\n            register: register\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/signin\",\n          children: /*#__PURE__*/_jsxDEV(Login, {\n            enter: enter\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(InfoTooltip, {\n        onClose: closeAllPopups,\n        isOpen: isInfoTooltipOpen,\n        overlay: overlayClick,\n        tooltipStatus: tooltipStatus\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(AddPlacePopup, {\n        isLoading: isLoading,\n        onChangeLoading: changeLoading,\n        overlay: overlayClick,\n        onAddPlace: handleAddPlaceSubmit,\n        isOpen: isAddPlacePopupOpen,\n        onClose: closeAllPopups\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(EditAvatarPopup, {\n        isLoading: isLoading,\n        onChangeLoading: changeLoading,\n        overlay: overlayClick,\n        onUpdateAvatar: handleUpdateAvatar,\n        isOpen: isEditAvatarPopupOpen,\n        onClose: closeAllPopups\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(EditProfilePopup, {\n        isLoading: isLoading,\n        onChangeLoading: changeLoading,\n        overlay: overlayClick,\n        onUpdateUser: handleUpdateUser,\n        isOpen: isEditProfilePopupOpen,\n        onClose: closeAllPopups\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(ImagePopup, {\n        overlay: overlayClick,\n        isOpen: isImagePopupOpen,\n        onClose: closeAllPopups,\n        card: selectedCard\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 209,\n    columnNumber: 7\n  }, this);\n}\n\n_s(App, \"vHjcpqqL5G+f416IuT3Ywf6VKzU=\", false, function () {\n  return [useHistory];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/pavelglazkov/Desktop/dev/react-mesto-api-full/frontend/src/components/App.js"],"names":["React","Header","Main","Footer","AddPlacePopup","EditAvatarPopup","EditProfilePopup","api","ImagePopup","CurrentUserContext","Route","Switch","useHistory","Login","Register","ProtectedRoute","InfoTooltip","apiAuth","App","isEditAvatarPopupOpen","setEditAvatarPopupOpen","useState","isEditProfilePopupOpen","setEditProfilePopupOpen","isAddPlacePopupOpen","setAddPlacePopupOpen","cards","setCards","selectedCard","setSelectedCard","isImagePopupOpen","setImagePopupOpen","currentUser","setCurrentUser","isLoading","setIsLoading","isLoggedIn","setIsLoggedIn","email","setEmail","isInfoTooltipOpen","setInfoTooltipOpen","tooltipStatus","setToolTipStatus","history","useEffect","jwt","localStorage","getItem","getContent","then","res","push","catch","err","console","error","getUserInfo","getInitialCards","data","register","password","log","enter","token","setItem","signOut","removeItem","changeLoading","handleCardClick","closeAllPopups","handleEditProfileClick","handleAddPlaceClick","handleEditAvatarClick","handleUpdateUser","setUserInfo","finally","handleUpdateAvatar","changeAvatar","handleAddPlaceSubmit","newCard","setCardServer","handleCardLike","card","isLiked","likes","some","i","_id","changeLikeCardStatus","newCards","map","c","handleCardDelete","deleteCard","filter","window","addEventListener","e","key","overlayClick","classList","contains"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Header from \"./Header\";\nimport Main from \"./Main\";\nimport Footer from \"./Footer\";\nimport AddPlacePopup from \"./AddPlacePopup\";\nimport EditAvatarPopup from \"./EditAvatarPopup\";\nimport EditProfilePopup from \"./EditProfilePopup\";\nimport api from \"../utils/api\";\nimport ImagePopup from \"./ImagePopup\";\nimport {CurrentUserContext} from \"../contexts/CurrentUserContext\";\nimport { Route, Switch, useHistory } from 'react-router-dom';\nimport {Login} from \"./Login\";\nimport {Register} from \"./Register\";\nimport {ProtectedRoute} from \"./ProtectedRoute\";\nimport {InfoTooltip} from \"./InfoTooltip\";\nimport * as apiAuth from \"../utils/apiAuth\"\n\nfunction App() {\n    const [isEditAvatarPopupOpen, setEditAvatarPopupOpen] = React.useState(false);\n    const [isEditProfilePopupOpen, setEditProfilePopupOpen] = React.useState(false);\n    const [isAddPlacePopupOpen, setAddPlacePopupOpen] = React.useState(false);\n    const [cards, setCards] = React.useState([])\n    const [selectedCard, setSelectedCard] = React.useState({})\n    const [isImagePopupOpen, setImagePopupOpen] = React.useState(false);\n    const [currentUser, setCurrentUser] = React.useState({})\n    const [isLoading, setIsLoading] = React.useState(false)\n    const [isLoggedIn, setIsLoggedIn] = React.useState(false)\n    const [email, setEmail] = React.useState('')\n    const [isInfoTooltipOpen, setInfoTooltipOpen] = React.useState(false)\n    const [tooltipStatus, setToolTipStatus] = React.useState(false)\n\n    const history = useHistory();\n\n    React.useEffect(() => {\n      const jwt = localStorage.getItem('jwt');\n      if(jwt){\n        apiAuth.getContent(jwt)\n            .then((res) => {\n              setIsLoggedIn(true);\n              history.push('/users/me')\n\n            })\n            .catch(err => console.error(err))\n      }\n    }, [history, ''])\n\n  React.useEffect(() => {\n    api.getUserInfo()\n        .then(res => {\n          setEmail(res.email);\n          setCurrentUser(res)})\n        .catch(err => {console.error(err)})\n  }, [])\n\n  React.useEffect(() => {\n    api.getInitialCards()\n        .then(res => {setCards(res.data)})\n        .catch(err => {console.error(err)})\n  }, [])\n\n  function register(email, password) {\n    apiAuth.register(email, password)\n        .then((res) => {\n          if (res.data) {\n            setToolTipStatus(false)\n            setInfoTooltipOpen(true)\n            history.push('/signin');\n          }\n        })\n        .catch((err) => {\n          setToolTipStatus(true)\n          setInfoTooltipOpen(true)\n          console.log(`Упс, произошла ошибка: ${err}`);\n        })\n  }\n\n  function enter(email, password) {\n    apiAuth.enter(email, password)\n        .then((data) => {\n          if (data.token) {\n            setToolTipStatus(false)\n            setInfoTooltipOpen(false)\n            localStorage.setItem('jwt', data.token)\n            setIsLoggedIn(true)\n            history.push('/users/me')\n            setEmail(email)\n\n          } else {\n            setToolTipStatus(true)\n            setInfoTooltipOpen(true)\n          }\n        })\n        .catch((err) => {\n          setToolTipStatus(true)\n          setInfoTooltipOpen(true)\n          console.log(`Упс, произошла ошибка: ${err}`);\n        })\n  }\n\n  function signOut(){\n    localStorage.removeItem('jwt');\n    setIsLoggedIn(false);\n    history.push('/signin');\n  }\n\n\n    const changeLoading = () =>{\n      setIsLoading(true)\n  }\n\n    const handleCardClick = (data) => {\n      setImagePopupOpen(true)\n      setSelectedCard(data)\n    }\n\n    const closeAllPopups = () => {\n        setEditAvatarPopupOpen(false)\n        setEditProfilePopupOpen(false)\n        setAddPlacePopupOpen(false)\n        setImagePopupOpen(false)\n        setInfoTooltipOpen(false)\n    }\n\n    const handleEditProfileClick = () => {\n        setEditProfilePopupOpen(true)\n    }\n    const handleAddPlaceClick = () => {\n        setAddPlacePopupOpen(true)\n    }\n    function handleEditAvatarClick(){\n        setEditAvatarPopupOpen(true)\n    }\n    //Меняет информацию о пользователе\n    const handleUpdateUser = (data) => {\n      api.setUserInfo(data)\n          .then((res) => {\n            setCurrentUser(res.data)\n            closeAllPopups()\n          })\n          .catch(err => {console.error(err)})\n          .finally(() => {\n            setIsLoading(false)\n          })\n    }\n    //Меняет аватар\n    const handleUpdateAvatar = (data) => {\n      api.changeAvatar(data)\n          .then((res) => {\n            setCurrentUser(res.data)\n            closeAllPopups()\n          })\n          .catch(err => {console.error(err)})\n          .finally(() => {\n            setIsLoading(false)\n          })\n    }\n    //Добавление новой карточки\n    const handleAddPlaceSubmit = (newCard) => {\n      api.setCardServer(newCard)\n          .then((res) => {\n            setCards([res.data, ...cards]);\n            closeAllPopups()\n          })\n          .catch(err => {console.error(err)})\n          .finally(() => {\n            setIsLoading(false)\n          })\n    }\n  function handleCardLike(card) {\n    // Снова проверяем, есть ли уже лайк на этой карточке\n    const isLiked = card.likes.some(i => i === currentUser._id);\n\n    // Отправляем запрос в API и получаем обновлённые данные карточки\n    api.changeLikeCardStatus(card._id, !isLiked)\n        .then((newCard) => {\n          const newCards = cards.map((c) => c._id === card._id ? newCard.data : c);// Формируем новый массив на основе имеющегося, подставляя в него новую карточку\n          //проверяет если id предыдущей карточки равен id полученной при PUT-запросе, то создавай новую карточку из запроса иначе оставляй старую\n          setCards(newCards)\n        })\n        // .then((newCard) => {\n        //   setCards((state) => state.map((c) => c._id === card._id ? newCard : c));\n        // })\n        .catch(err => {console.error(err)})\n  }\n\n  function handleCardDelete(card){\n    api.deleteCard(card._id)\n        .then(() => {\n          setCards(cards.filter((c) => c._id !== card._id))\n        })\n        .catch(err => {console.error(err)})\n  }\n\n  React.useEffect(() => {\n    window.addEventListener('keydown', (e) => {\n      if (e.key === 'Escape') {\n        closeAllPopups();\n      }\n    })\n  },[])\n\n  function overlayClick(e) {\n      if (e.classList.contains('popup')){\n        closeAllPopups()\n      }\n  }\n\n  return (\n      <CurrentUserContext.Provider value={currentUser}>\n          <div className=\"page\">\n            <Header signOut={signOut} email={email} />\n            <Switch>\n              <ProtectedRoute\n                  exact path=\"/users/me\"\n                  component={Main}\n                  onEditAvatar={handleEditAvatarClick}\n                  onEditProfile={handleEditProfileClick}\n                  onAddPlace={handleAddPlaceClick}\n                  onCardClick={handleCardClick}\n                  onCardLike={handleCardLike}\n                  onCardDelete={handleCardDelete}\n                  cards={cards}\n                  setCards={setCards}\n                  isLoggedIn={isLoggedIn}\n              />\n              <Route path=\"/signup\">\n                <Register register={register}/>\n              </Route>\n              <Route path=\"/signin\">\n                <Login enter={enter} />\n              </Route>\n            </Switch>\n            <InfoTooltip\n                onClose={closeAllPopups}\n                isOpen={isInfoTooltipOpen}\n                overlay={overlayClick}\n                tooltipStatus={tooltipStatus}\n            />\n            <AddPlacePopup\n                isLoading={isLoading}\n                onChangeLoading={changeLoading}\n                overlay={overlayClick}\n                onAddPlace={handleAddPlaceSubmit}\n                isOpen={isAddPlacePopupOpen}\n                onClose={closeAllPopups}\n            />\n            <EditAvatarPopup\n                isLoading={isLoading}\n                onChangeLoading={changeLoading}\n                overlay={overlayClick}\n                onUpdateAvatar={handleUpdateAvatar}\n                isOpen={isEditAvatarPopupOpen}\n                onClose={closeAllPopups}\n            />\n            <EditProfilePopup\n                isLoading={isLoading}\n                onChangeLoading={changeLoading}\n                overlay={overlayClick}\n                onUpdateUser={handleUpdateUser}\n                isOpen={isEditProfilePopupOpen}\n                onClose={closeAllPopups}\n            />\n            <ImagePopup overlay={overlayClick} isOpen={isImagePopupOpen} onClose={closeAllPopups} card={selectedCard} />\n            <Footer />\n          </div>\n      </CurrentUserContext.Provider>\n  );\n\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}