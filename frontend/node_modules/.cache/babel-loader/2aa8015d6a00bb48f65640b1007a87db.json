{"ast":null,"code":"import _slicedToArray from\"/Users/pavelglazkov/Desktop/dev/react-mesto-api-full/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React from\"react\";import PopupWithForm from\"./PopupWithForm\";import{CurrentUserContext}from\"../contexts/CurrentUserContext\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function EditProfilePopup(_ref){var isOpen=_ref.isOpen,onClose=_ref.onClose,onUpdateUser=_ref.onUpdateUser,overlay=_ref.overlay,isLoading=_ref.isLoading,onChangeLoading=_ref.onChangeLoading;var currentUser=React.useContext(CurrentUserContext);var _React$useState=React.useState(' '),_React$useState2=_slicedToArray(_React$useState,2),name=_React$useState2[0],setName=_React$useState2[1];var _React$useState3=React.useState(' '),_React$useState4=_slicedToArray(_React$useState3,2),description=_React$useState4[0],setDescription=_React$useState4[1];function handleNameChange(e){setName(e.target.value);}function handleDescriptionChange(e){setDescription(e.target.value);}React.useEffect(function(){setName(currentUser.name);setDescription(currentUser.about);},[currentUser,isOpen]);function handleSubmit(e){e.preventDefault();onChangeLoading();onUpdateUser({name:name,about:description});}function overlayClick(e){overlay(e.target);}var handleButtonText=\"\".concat(isLoading?'Сохранение...':'Сохранение');return/*#__PURE__*/_jsxs(PopupWithForm,{overlayClick:overlayClick,onSubmit:handleSubmit,isOpen:isOpen,onClose:onClose,name:\"profile\",title:\"\\u0420\\u0435\\u0434\\u0430\\u043A\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C \\u043F\\u0440\\u043E\\u0444\\u0438\\u043B\\u044C\",buttonText:handleButtonText,children:[/*#__PURE__*/_jsx(\"input\",{className:\"popup__item popup__item_type_name\",value:name||'',onChange:handleNameChange,id:\"text-input-name\",type:\"text\",placeholder:\"\\u0412\\u0430\\u0448\\u0435 \\u0438\\u043C\\u044F\",required:true,minLength:\"2\",maxLength:\"40\"}),/*#__PURE__*/_jsx(\"span\",{className:\"text-input-name-error popup__input-error\"}),/*#__PURE__*/_jsx(\"input\",{className:\"popup__item popup__item_type_job\",value:description||'',onChange:handleDescriptionChange,id:\"text-input-job\",type:\"text\",placeholder:\"\\u0412\\u0430\\u0448\\u0435 \\u043F\\u0440\\u0438\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435\",required:true,minLength:\"2\",maxLength:\"200\"}),/*#__PURE__*/_jsx(\"span\",{className:\"text-input-job-error popup__input-error\"})]});}export default EditProfilePopup;","map":{"version":3,"sources":["/Users/pavelglazkov/Desktop/dev/react-mesto-api-full/frontend/src/components/EditProfilePopup.js"],"names":["React","PopupWithForm","CurrentUserContext","EditProfilePopup","isOpen","onClose","onUpdateUser","overlay","isLoading","onChangeLoading","currentUser","useContext","useState","name","setName","description","setDescription","handleNameChange","e","target","value","handleDescriptionChange","useEffect","about","handleSubmit","preventDefault","overlayClick","handleButtonText"],"mappings":"oLAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,aAAP,KAA0B,iBAA1B,CACA,OAAQC,kBAAR,KAAiC,gCAAjC,C,wFAGA,QAASC,CAAAA,gBAAT,MAA+F,IAApEC,CAAAA,MAAoE,MAApEA,MAAoE,CAA5DC,OAA4D,MAA5DA,OAA4D,CAAnDC,YAAmD,MAAnDA,YAAmD,CAArCC,OAAqC,MAArCA,OAAqC,CAA5BC,SAA4B,MAA5BA,SAA4B,CAAjBC,eAAiB,MAAjBA,eAAiB,CAC7F,GAAMC,CAAAA,WAAW,CAAGV,KAAK,CAACW,UAAN,CAAiBT,kBAAjB,CAApB,CAEA,oBAAwBF,KAAK,CAACY,QAAN,CAAe,GAAf,CAAxB,oDAAOC,IAAP,qBAAaC,OAAb,qBACA,qBAAsCd,KAAK,CAACY,QAAN,CAAe,GAAf,CAAtC,qDAAOG,WAAP,qBAAoBC,cAApB,qBAEA,QAASC,CAAAA,gBAAT,CAA0BC,CAA1B,CAA6B,CAC3BJ,OAAO,CAACI,CAAC,CAACC,MAAF,CAASC,KAAV,CAAP,CACD,CACD,QAASC,CAAAA,uBAAT,CAAiCH,CAAjC,CAAoC,CAClCF,cAAc,CAACE,CAAC,CAACC,MAAF,CAASC,KAAV,CAAd,CACD,CACDpB,KAAK,CAACsB,SAAN,CAAgB,UAAM,CACpBR,OAAO,CAACJ,WAAW,CAACG,IAAb,CAAP,CACAG,cAAc,CAACN,WAAW,CAACa,KAAb,CAAd,CACD,CAHD,CAGG,CAACb,WAAD,CAAcN,MAAd,CAHH,EAKA,QAASoB,CAAAA,YAAT,CAAsBN,CAAtB,CAAyB,CACvBA,CAAC,CAACO,cAAF,GACAhB,eAAe,GACfH,YAAY,CAAC,CACXO,IAAI,CAAJA,IADW,CAEXU,KAAK,CAAER,WAFI,CAAD,CAAZ,CAID,CAED,QAASW,CAAAA,YAAT,CAAsBR,CAAtB,CAAwB,CACtBX,OAAO,CAACW,CAAC,CAACC,MAAH,CAAP,CACD,CAED,GAAMQ,CAAAA,gBAAgB,WAAOnB,SAAS,CAAG,eAAH,CAAqB,YAArC,CAAtB,CAGA,mBACM,MAAC,aAAD,EAAe,YAAY,CAAEkB,YAA7B,CAA2C,QAAQ,CAAEF,YAArD,CAAmE,MAAM,CAAEpB,MAA3E,CAAmF,OAAO,CAAEC,OAA5F,CAAqG,IAAI,CAAC,SAA1G,CAAoH,KAAK,CAAC,2HAA1H,CAAkJ,UAAU,CAAEsB,gBAA9J,wBACI,cAAO,SAAS,CAAC,mCAAjB,CAAqD,KAAK,CAAEd,IAAI,EAAI,EAApE,CAAwE,QAAQ,CAAEI,gBAAlF,CACO,EAAE,CAAC,iBADV,CAC4B,IAAI,CAAC,MADjC,CAEO,WAAW,CAAC,6CAFnB,CAE8B,QAAQ,KAFtC,CAEuC,SAAS,CAAC,GAFjD,CAEqD,SAAS,CAAC,IAF/D,EADJ,cAIQ,aAAM,SAAS,CAAC,0CAAhB,EAJR,cAKQ,cAAO,SAAS,CAAC,kCAAjB,CAAoD,KAAK,CAAEF,WAAW,EAAI,EAA1E,CAA8E,QAAQ,CAAEM,uBAAxF,CACO,EAAE,CAAC,gBADV,CAC2B,IAAI,CAAC,MADhC,CAEO,WAAW,CAAC,iFAFnB,CAEoC,QAAQ,KAF5C,CAE6C,SAAS,CAAC,GAFvD,CAE2D,SAAS,CAAC,KAFrE,EALR,cAQY,aAAM,SAAS,CAAC,yCAAhB,EARZ,GADN,CAYD,CAED,cAAelB,CAAAA,gBAAf","sourcesContent":["import React from \"react\";\nimport PopupWithForm from \"./PopupWithForm\";\nimport {CurrentUserContext} from \"../contexts/CurrentUserContext\";\n\n\nfunction EditProfilePopup({isOpen, onClose, onUpdateUser, overlay, isLoading, onChangeLoading}){\n  const currentUser = React.useContext(CurrentUserContext);\n\n  const [name, setName] = React.useState(' ');\n  const [description, setDescription] = React.useState(' ');\n\n  function handleNameChange(e) {\n    setName(e.target.value)\n  }\n  function handleDescriptionChange(e) {\n    setDescription(e.target.value)\n  }\n  React.useEffect(() => {\n    setName(currentUser.name);\n    setDescription(currentUser.about);\n  }, [currentUser, isOpen]);\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    onChangeLoading();\n    onUpdateUser({\n      name,\n      about: description,\n    });\n  }\n\n  function overlayClick(e){\n    overlay(e.target)\n  }\n\n  const handleButtonText = (`${isLoading ? 'Сохранение...' : 'Сохранение'}`);\n\n\n  return(\n        <PopupWithForm overlayClick={overlayClick} onSubmit={handleSubmit} isOpen={isOpen} onClose={onClose} name=\"profile\" title=\"Редактировать профиль\" buttonText={handleButtonText}>\n            <input className=\"popup__item popup__item_type_name\" value={name || ''} onChange={handleNameChange}\n                   id=\"text-input-name\" type=\"text\"\n                   placeholder=\"Ваше имя\" required minLength=\"2\" maxLength=\"40\" />\n                <span className=\"text-input-name-error popup__input-error\"></span>\n                <input className=\"popup__item popup__item_type_job\" value={description || ''} onChange={handleDescriptionChange}\n                       id=\"text-input-job\" type=\"text\"\n                       placeholder=\"Ваше призвание\" required minLength=\"2\" maxLength=\"200\" />\n                    <span className=\"text-input-job-error popup__input-error\"></span>\n        </PopupWithForm>\n    )\n}\n\nexport default EditProfilePopup;"]},"metadata":{},"sourceType":"module"}