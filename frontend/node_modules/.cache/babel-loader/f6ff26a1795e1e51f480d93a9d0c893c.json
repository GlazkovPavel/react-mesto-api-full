{"ast":null,"code":"import _classCallCheck from\"/Users/pavelglazkov/Desktop/dev/react-mesto-api-full/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/pavelglazkov/Desktop/dev/react-mesto-api-full/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import{config}from\"./utils\";//import {config} from \"../components/App\"\nvar Api=/*#__PURE__*/function(){function Api(config){_classCallCheck(this,Api);this._url=config.url;this._headers=config.headers;}_createClass(Api,[{key:\"_getResponse\",value:function _getResponse(res){if(res.ok){return res.json();}return Promise.reject(\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430: \".concat(res.status));}},{key:\"getInitialCards\",value:function getInitialCards(){return fetch(\"\".concat(this._url,\"/cards\"),{headers:this._headers}).then(this._getResponse);}},{key:\"getUserInfo\",value:function getUserInfo(){return fetch(\"\".concat(this._url,\"/users/me\"),{headers:this._headers}).then(this._getResponse);}},{key:\"setUserInfo\",value:function setUserInfo(data,jwt){return fetch(\"\".concat(this._url,\"/users/me\"),{method:'PATCH',headers:{authorization:\"Bearer \".concat(jwt),'Content-Type':'application/json'},body:JSON.stringify({name:data.name,about:data.about})}).then(this._getResponse);}},{key:\"setCardServer\",value:function setCardServer(data,jwt){return fetch(\"\".concat(this._url,\"/cards\"),{method:'POST',headers:{authorization:\"Bearer \".concat(jwt),'Content-Type':'application/json'},body:JSON.stringify({name:data.name,link:data.link})}).then(this._getResponse);}},{key:\"changeLikeCardStatus\",value:function changeLikeCardStatus(cardId,isLiked,jwt){console.log(jwt);return fetch(\"\".concat(this._url,\"/cards/\").concat(cardId,\"/likes\"),{method:isLiked?'PUT':'DELETE',headers:{authorization:\"Bearer \".concat(jwt),'Content-Type':'application/json'}}).then(this._getResponse);}},{key:\"deleteCard\",value:function deleteCard(cardId,jwt){return fetch(\"\".concat(this._url,\"/cards/\").concat(cardId),{method:'DELETE',headers:{authorization:\"Bearer \".concat(jwt),'Content-Type':'application/json'}}).then(this._getResponse);}},{key:\"changeAvatar\",value:function changeAvatar(data,jwt){return fetch(\"\".concat(this._url,\"/users/me/avatar\"),{method:'PATCH',headers:{authorization:\"Bearer \".concat(jwt),'Content-Type':'application/json'},body:JSON.stringify({avatar:data.avatar})}).then(this._getResponse);}}]);return Api;}();var api=new Api(config);export default api;","map":{"version":3,"sources":["/Users/pavelglazkov/Desktop/dev/react-mesto-api-full/frontend/src/utils/api.js"],"names":["config","Api","_url","url","_headers","headers","res","ok","json","Promise","reject","status","fetch","then","_getResponse","data","jwt","method","authorization","body","JSON","stringify","name","about","link","cardId","isLiked","console","log","avatar","api"],"mappings":"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","sourcesContent":["import {config} from \"./utils\";\n//import {config} from \"../components/App\"\nclass Api {\n    constructor(config) {\n        this._url = config.url;\n        this._headers = config.headers;\n    }\n\n    _getResponse(res) {\n        if (res.ok) {\n            return res.json();\n        }\n        return Promise.reject(`Ошибка: ${res.status}`);\n    }\n\n    getInitialCards() {\n        return fetch(`${this._url}/cards`, {\n            headers: this._headers\n        })\n            .then(this._getResponse)\n    }\n\n    getUserInfo() {\n        return fetch(`${this._url}/users/me`, {\n            headers: this._headers\n        })\n            .then(this._getResponse)\n    }\n\n    setUserInfo(data, jwt) {\n        return fetch(`${this._url}/users/me`, {\n            method: 'PATCH',\n          headers: {\n            authorization: `Bearer ${jwt}`,\n            'Content-Type': 'application/json'\n          },\n            body: JSON.stringify({\n                name: data.name,\n                about: data.about\n            })\n        })\n            .then(this._getResponse)\n    }\n\n    setCardServer(data, jwt) {\n        return fetch(`${this._url}/cards`, {\n            method: 'POST',\n          headers: {\n            authorization: `Bearer ${jwt}`,\n            'Content-Type': 'application/json'\n          },\n            body: JSON.stringify({\n                name: data.name,\n                link: data.link\n            })\n        })\n            .then(this._getResponse)\n    }\n\n  changeLikeCardStatus(cardId, isLiked, jwt) {\n        console.log(jwt)\n        return fetch(`${this._url}/cards/${cardId}/likes`, {\n            method: isLiked ? 'PUT' : 'DELETE',\n             headers: {\n            authorization: `Bearer ${jwt}`,\n            'Content-Type': 'application/json'\n          }\n        })\n            .then(this._getResponse)\n    }\n\n    deleteCard(cardId, jwt) {\n        return fetch(`${this._url}/cards/${cardId}`, {\n            method: 'DELETE',\n          headers: {\n            authorization: `Bearer ${jwt}`,\n            'Content-Type': 'application/json'\n          }\n        })\n            .then(this._getResponse)\n    }\n\n\n    changeAvatar(data, jwt) {\n        return fetch(`${this._url}/users/me/avatar`, {\n            method: 'PATCH',\n          headers: {\n            authorization: `Bearer ${jwt}`,\n            'Content-Type': 'application/json'\n          },\n            body: JSON.stringify({\n                avatar: data.avatar,\n            })\n        })\n            .then(this._getResponse)\n    }\n}\n\nconst api = new Api(config);\nexport default api;\n"]},"metadata":{},"sourceType":"module"}