{"ast":null,"code":"import _classCallCheck from\"/Users/pavelglazkov/Desktop/dev/react-mesto-api-full/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/pavelglazkov/Desktop/dev/react-mesto-api-full/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import{config}from\"./utils\";var Api=/*#__PURE__*/function(){function Api(config){_classCallCheck(this,Api);this._url=config.url;}_createClass(Api,[{key:\"_getResponse\",value:function _getResponse(res){if(res.ok){return res.json();}return Promise.reject(\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430: \".concat(res.status));}},{key:\"getInitialCards\",value:function getInitialCards(jwt){return fetch(\"\".concat(this._url,\"/cards\"),{headers:{authorization:\"Bearer \".concat(jwt),'Content-Type':'application/json'}}).then(this._getResponse);}},{key:\"getUserInfo\",value:function getUserInfo(jwt){return fetch(\"\".concat(this._url,\"/users/me\"),{headers:{authorization:\"Bearer \".concat(jwt),'Content-Type':'application/json'}}).then(this._getResponse);}},{key:\"setUserInfo\",value:function setUserInfo(data,jwt){return fetch(\"\".concat(this._url,\"/users/me\"),{method:'PATCH',headers:{authorization:\"Bearer \".concat(jwt),'Content-Type':'application/json'},body:JSON.stringify({name:data.name,about:data.about})}).then(this._getResponse);}},{key:\"setCardServer\",value:function setCardServer(data,jwt){return fetch(\"\".concat(this._url,\"/cards\"),{method:'POST',headers:{authorization:\"Bearer \".concat(jwt),'Content-Type':'application/json'},body:JSON.stringify({name:data.name,link:data.link})}).then(this._getResponse);}},{key:\"changeLikeCardStatus\",value:function changeLikeCardStatus(cardId,isLiked,jwt){console.log(jwt);return fetch(\"\".concat(this._url,\"/cards/\").concat(cardId,\"/likes\"),{method:isLiked?'PUT':'DELETE',headers:{authorization:\"Bearer \".concat(jwt),'Content-Type':'application/json'}}).then(this._getResponse);}},{key:\"deleteCard\",value:function deleteCard(cardId,jwt){return fetch(\"\".concat(this._url,\"/cards/\").concat(cardId),{method:'DELETE',headers:{authorization:\"Bearer \".concat(jwt),'Content-Type':'application/json'}}).then(this._getResponse);}},{key:\"changeAvatar\",value:function changeAvatar(data,jwt){return fetch(\"\".concat(this._url,\"/users/me/avatar\"),{method:'PATCH',headers:{authorization:\"Bearer \".concat(jwt),'Content-Type':'application/json'},body:JSON.stringify({avatar:data.avatar})}).then(this._getResponse);}}]);return Api;}();var api=new Api(config);export default api;","map":{"version":3,"sources":["/Users/pavelglazkov/Desktop/dev/react-mesto-api-full/frontend/src/utils/api.js"],"names":["config","Api","_url","url","res","ok","json","Promise","reject","status","jwt","fetch","headers","authorization","then","_getResponse","data","method","body","JSON","stringify","name","about","link","cardId","isLiked","console","log","avatar","api"],"mappings":"sWAAA,OAAQA,MAAR,KAAqB,SAArB,C,GAEMC,CAAAA,G,yBACF,aAAYD,MAAZ,CAAoB,2BAChB,KAAKE,IAAL,CAAYF,MAAM,CAACG,GAAnB,CAEH,C,4CAED,sBAAaC,GAAb,CAAkB,CACd,GAAIA,GAAG,CAACC,EAAR,CAAY,CACR,MAAOD,CAAAA,GAAG,CAACE,IAAJ,EAAP,CACH,CACD,MAAOC,CAAAA,OAAO,CAACC,MAAR,iDAA0BJ,GAAG,CAACK,MAA9B,EAAP,CACH,C,+BAED,yBAAgBC,GAAhB,CAAqB,CACjB,MAAOC,CAAAA,KAAK,WAAI,KAAKT,IAAT,WAAuB,CACjCU,OAAO,CAAE,CACPC,aAAa,kBAAYH,GAAZ,CADN,CAEP,eAAgB,kBAFT,CADwB,CAAvB,CAAL,CAMFI,IANE,CAMG,KAAKC,YANR,CAAP,CAOH,C,2BAED,qBAAYL,GAAZ,CAAiB,CACb,MAAOC,CAAAA,KAAK,WAAI,KAAKT,IAAT,cAA0B,CACpCU,OAAO,CAAE,CACPC,aAAa,kBAAYH,GAAZ,CADN,CAEP,eAAgB,kBAFT,CAD2B,CAA1B,CAAL,CAMFI,IANE,CAMG,KAAKC,YANR,CAAP,CAOH,C,2BAED,qBAAYC,IAAZ,CAAkBN,GAAlB,CAAuB,CACnB,MAAOC,CAAAA,KAAK,WAAI,KAAKT,IAAT,cAA0B,CAClCe,MAAM,CAAE,OAD0B,CAEpCL,OAAO,CAAE,CACPC,aAAa,kBAAYH,GAAZ,CADN,CAEP,eAAgB,kBAFT,CAF2B,CAMlCQ,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAe,CACjBC,IAAI,CAAEL,IAAI,CAACK,IADM,CAEjBC,KAAK,CAAEN,IAAI,CAACM,KAFK,CAAf,CAN4B,CAA1B,CAAL,CAWFR,IAXE,CAWG,KAAKC,YAXR,CAAP,CAYH,C,6BAED,uBAAcC,IAAd,CAAoBN,GAApB,CAAyB,CACrB,MAAOC,CAAAA,KAAK,WAAI,KAAKT,IAAT,WAAuB,CAC/Be,MAAM,CAAE,MADuB,CAEjCL,OAAO,CAAE,CACPC,aAAa,kBAAYH,GAAZ,CADN,CAEP,eAAgB,kBAFT,CAFwB,CAM/BQ,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAe,CACjBC,IAAI,CAAEL,IAAI,CAACK,IADM,CAEjBE,IAAI,CAAEP,IAAI,CAACO,IAFM,CAAf,CANyB,CAAvB,CAAL,CAWFT,IAXE,CAWG,KAAKC,YAXR,CAAP,CAYH,C,oCAEH,8BAAqBS,MAArB,CAA6BC,OAA7B,CAAsCf,GAAtC,CAA2C,CACrCgB,OAAO,CAACC,GAAR,CAAYjB,GAAZ,EACA,MAAOC,CAAAA,KAAK,WAAI,KAAKT,IAAT,mBAAuBsB,MAAvB,WAAuC,CAC/CP,MAAM,CAAEQ,OAAO,CAAG,KAAH,CAAW,QADqB,CAE9Cb,OAAO,CAAE,CACVC,aAAa,kBAAYH,GAAZ,CADH,CAEV,eAAgB,kBAFN,CAFqC,CAAvC,CAAL,CAOFI,IAPE,CAOG,KAAKC,YAPR,CAAP,CAQH,C,0BAED,oBAAWS,MAAX,CAAmBd,GAAnB,CAAwB,CACpB,MAAOC,CAAAA,KAAK,WAAI,KAAKT,IAAT,mBAAuBsB,MAAvB,EAAiC,CACzCP,MAAM,CAAE,QADiC,CAE3CL,OAAO,CAAE,CACPC,aAAa,kBAAYH,GAAZ,CADN,CAEP,eAAgB,kBAFT,CAFkC,CAAjC,CAAL,CAOFI,IAPE,CAOG,KAAKC,YAPR,CAAP,CAQH,C,4BAGD,sBAAaC,IAAb,CAAmBN,GAAnB,CAAwB,CACpB,MAAOC,CAAAA,KAAK,WAAI,KAAKT,IAAT,qBAAiC,CACzCe,MAAM,CAAE,OADiC,CAE3CL,OAAO,CAAE,CACPC,aAAa,kBAAYH,GAAZ,CADN,CAEP,eAAgB,kBAFT,CAFkC,CAMzCQ,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAe,CACjBQ,MAAM,CAAEZ,IAAI,CAACY,MADI,CAAf,CANmC,CAAjC,CAAL,CAUFd,IAVE,CAUG,KAAKC,YAVR,CAAP,CAWH,C,mBAGL,GAAMc,CAAAA,GAAG,CAAG,GAAI5B,CAAAA,GAAJ,CAAQD,MAAR,CAAZ,CACA,cAAe6B,CAAAA,GAAf","sourcesContent":["import {config} from \"./utils\";\n\nclass Api {\n    constructor(config) {\n        this._url = config.url;\n\n    }\n\n    _getResponse(res) {\n        if (res.ok) {\n            return res.json();\n        }\n        return Promise.reject(`Ошибка: ${res.status}`);\n    }\n\n    getInitialCards(jwt) {\n        return fetch(`${this._url}/cards`, {\n          headers: {\n            authorization: `Bearer ${jwt}`,\n            'Content-Type': 'application/json'\n          }\n        })\n            .then(this._getResponse)\n    }\n\n    getUserInfo(jwt) {\n        return fetch(`${this._url}/users/me`, {\n          headers: {\n            authorization: `Bearer ${jwt}`,\n            'Content-Type': 'application/json'\n          }\n        })\n            .then(this._getResponse)\n    }\n\n    setUserInfo(data, jwt) {\n        return fetch(`${this._url}/users/me`, {\n            method: 'PATCH',\n          headers: {\n            authorization: `Bearer ${jwt}`,\n            'Content-Type': 'application/json'\n          },\n            body: JSON.stringify({\n                name: data.name,\n                about: data.about\n            })\n        })\n            .then(this._getResponse)\n    }\n\n    setCardServer(data, jwt) {\n        return fetch(`${this._url}/cards`, {\n            method: 'POST',\n          headers: {\n            authorization: `Bearer ${jwt}`,\n            'Content-Type': 'application/json'\n          },\n            body: JSON.stringify({\n                name: data.name,\n                link: data.link\n            })\n        })\n            .then(this._getResponse)\n    }\n\n  changeLikeCardStatus(cardId, isLiked, jwt) {\n        console.log(jwt)\n        return fetch(`${this._url}/cards/${cardId}/likes`, {\n            method: isLiked ? 'PUT' : 'DELETE',\n             headers: {\n            authorization: `Bearer ${jwt}`,\n            'Content-Type': 'application/json'\n          }\n        })\n            .then(this._getResponse)\n    }\n\n    deleteCard(cardId, jwt) {\n        return fetch(`${this._url}/cards/${cardId}`, {\n            method: 'DELETE',\n          headers: {\n            authorization: `Bearer ${jwt}`,\n            'Content-Type': 'application/json'\n          }\n        })\n            .then(this._getResponse)\n    }\n\n\n    changeAvatar(data, jwt) {\n        return fetch(`${this._url}/users/me/avatar`, {\n            method: 'PATCH',\n          headers: {\n            authorization: `Bearer ${jwt}`,\n            'Content-Type': 'application/json'\n          },\n            body: JSON.stringify({\n                avatar: data.avatar,\n            })\n        })\n            .then(this._getResponse)\n    }\n}\n\nconst api = new Api(config);\nexport default api;\n"]},"metadata":{},"sourceType":"module"}